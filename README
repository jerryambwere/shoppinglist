
# Code Challenge: Interactive Shopping List

This challenge combines array iteration, DOM manipulation, and event handling to create an interactive shopping list application.

## Objective:
**Develop a webpage with a shopping list. Users can add items to the list, mark items as purchased, and clear the list.**

## Requirements:
### Array:
 Maintain a JavaScript array to store shopping list items.

### DOM Manipulation:
Create an HTML structure with an input field for adding items, a list container to display items, and buttons for "Add", "Mark Purchased", and "Clear List".
Use JavaScript to dynamically add new items to the list container when the user clicks the "Add" button. (The new items do not have to be persisted once the page refreshes)
Update the list item visually to indicate purchased items (e.g., strikethrough text, different background color).

### Event Handling:
Attach event listeners to the "Add" button to capture user input and add items to the list.
Attach event listeners to the list of items to allow users to mark them as purchased.
Attach an event listener to the "Clear List" button to remove all items from the list.
 

### Bonus Features:
Allow users to edit existing list items.
Implement persistence using local storage to save the list even after the page reloads.

## System requirements
- Node 18+
- A browser capable of running JavaScript (Chrome, Firefox, Safari, or Edge)
- Operating System (Windows 10+, MacOS, Linux, etc.)
- A text editor capable of running JavaScript (Visual Studio Code, Vim, Nano, Emacs, Atom, Sublime Text, etc.)
- RAM >= 4GB
- Disk space >= 1GB

## Installation

1.  Open the terminal/CLI on your computer.

2.  Clone the repository by running the following command:

        git clone git@github.com:jerryambwere/shoppinglist.git
3.  Change directory to the repo folder:

        cd shoppinglist

4.  Open it in your Code Editor of choice. If you use VS Code, run the command:

        code .

 ## running the application

     Open the index.html file in Mozilla Firefox, Safari or any Chromium-based browser.

- If using VS Code, you can use the Live Server extension to run the file on the browser for live reloading.

- Click [HERE]https://jerryambwere.github.io/shoppinglist/ to install the Live Server extension and to read instructions on how to use it.

- Open the context menu by right clicking anywhere on the page and select `Inspect` to launch the Developer Tools.

- Inside `index.js`, invoke/call each of the functions, one at a time and with varied inputs, to test the different logic implementations and check the output on the console.

- Remember to comment out each execution once done to avoid confusion with the outputs.
    
    ## Authors

This project was contributed to by:

- [Melvine Jerry ](https://github.com/jerryambwere/shoppinglist)
